{"version":3,"sources":["Components/Card/Card.js","Redux/actions.js","Containers/PostsPage/PostsPage.js","App.js","reportWebVitals.js","Redux/reducers.js","Redux/store.js","index.js"],"names":["Card","props","useState","comment","setComment","data-test","className","onClick","onImageClick","url","src","alt","style","width","height","likes","cursor","marginLeft","color","textDecoration","onLikeClicked","id","liked","category","placeholder","type","value","onChange","event","target","onPostClicked","comments","map","item","key","backgroundColor","borderBottom","onDeleteClick","class","fetchPostsSuccess","posts","payload","PostsPage","newData","picsData","currentItem","setState","prevState","onCommentChange","newComment","push","filterByMostLiked","sortedByLikes","sort","a","b","reverse","console","log","filterByMostCommented","length","onSearchTermEntered","results","filter","toLowerCase","includes","searchedPosts","imageClickedUrl","CardId","CommentKey","splice","state","outsideImageClicked","display","this","Component","connect","dispatch","data","getState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","axios","get","pics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc30557a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n    const postComment = () => {\r\n        if (comment !== \"\") {\r\n            props.onPostClicked(props.id, comment)\r\n        }\r\n        setComment(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div data-test=\"component-card\" className=\"card\">\r\n                <div className=\"image\" onClick={() => props.onImageClick(props.url)}>\r\n                    <img src={props.url} alt=\"Avatar\" style={{ width: \"100%\", height: \"150px\" }} ></img>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"picture-subInfo\">\r\n                        <div className=\"like-styles\">\r\n                            <div data-test=\"numberOfLikes\">\r\n                                {props.likes}\r\n                            </div>\r\n                            <div style={{ cursor: \"pointer\", marginLeft: \"5px\", color: \"blue\", textDecoration:\"underline\" }} data-test=\"button-like\" onClick={() => props.onLikeClicked(props.id)}>\r\n                                {props.liked ? \"Unlike\" : \"Like\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"categoryTypeStyles\">{props.category}</div>\r\n                    </div>\r\n                    <div data-test=\"commentBox\" className=\"commentBox\">\r\n                        <input placeholder={\"Type your comment here...\"} className=\"commentText\" type=\"text\" value={comment} onChange={(event) => setComment(event.target.value)} />\r\n                        <div data-test=\"button-post\" className=\"commentButton\" onClick={() => postComment()} >Post </div>\r\n                    </div>\r\n                    <div className=\"comments\">{props.comments ? props.comments\r\n                        .map((item, key) => <div style={{ backgroundColor: \"wheat\", borderBottom: \"1px solid blue\" }}>\r\n                            <div data-test=\"comment\" className=\"comment\">{item}</div>\r\n                            <div  className=\"deleteIcon\" onClick={() => props.onDeleteClick(props.id, key)}>\r\n                                <i class=\"fa fa-trash\"></i>\r\n                            </div>\r\n                        </div>) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","import axios from 'axios'\r\n\r\n//synchronous action creator\r\nconst fetchPostsSuccess = posts => ({\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    payload: { posts }\r\n})\r\n\r\n/*asynchronous thunk action creator\r\n  calls the api, then dispatches the synchronous action creator\r\n*/\r\nexport const fetchPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            let posts = await axios.get('https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json')\r\n            dispatch(fetchPostsSuccess(posts.data.pics)) //store first five posts\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const searchedPosts = (data) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'SEARCHED_POST', data })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Card from '../../Components/Card/Card'\r\nimport { connect } from 'react-redux'\r\nimport { searchedPosts } from '../../Redux/actions'\r\nimport './PostsPage.css'\r\n\r\nclass PostsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            picsData: [],\r\n            imageClickedUrl: null,\r\n            outsideImageClicked: false\r\n        }\r\n    }\r\n\r\n    onLikeClicked = (id) => {\r\n        let newData = this.props.picsData.map(item => {\r\n            if (id === item.id && item.liked !== true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes + 1\r\n                currentItem.liked = true\r\n                return currentItem\r\n            }\r\n            if (id === item.id && item.liked === true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes - 1\r\n                currentItem.liked = false\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                picsData: newData\r\n            }\r\n        })\r\n    }\r\n\r\n    onCommentChange = (event, id) => {\r\n        this.setState({ newComment: event.target.value })\r\n    }\r\n\r\n    onPostClicked = (id, comment) => {\r\n        let newData = this.props.picsData.map(item => {\r\n            if (id === item.id) {\r\n                let currentItem = item\r\n                item.comments.push(comment)\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n        if (this.props.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n    }\r\n\r\n    filterByMostLiked = () => {\r\n        let sortedByLikes = this.props.picsData.sort(function (a, b) {\r\n            return a.likes - b.likes;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    filterByMostCommented = () => {\r\n        let sortedByLikes = this.props.picsData.sort(function (a, b) {\r\n            return a.comments.length - b.comments.length;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    onSearchTermEntered = (event) => {\r\n        console.log(event)\r\n        const results = this.props.picsData.filter(item =>\r\n            item.category.toLowerCase().includes(event.target.value)\r\n        );\r\n\r\n        this.props.searchedPosts(results)\r\n\r\n    }\r\n\r\n    onImageClick = (url) => {\r\n        this.setState({ imageClickedUrl: url })\r\n    }\r\n\r\n    onDeleteClick = (CardId, CommentKey) => {\r\n        console.log(CardId, CommentKey)\r\n\r\n        let newData = this.props.picsData.map(item => {\r\n            if (CardId === item.id) {\r\n                let currentItem = item\r\n                item.comments.splice(CommentKey, 1);\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        if (this.props.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{ display: this.state.imageClickedUrl ? \"block\" : \"none\" }} id=\"overlay\" onClick={() => { this.setState({ imageClickedUrl: null }) }}>\r\n                    <div>\r\n                        <img className=\"overlayImageStyle\" src={this.state.imageClickedUrl} onClick='disabled click' alt=\"Avatar\" style={{ width: \"500px\" }}></img>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Header\">\r\n                        <div className=\"filter\" onClick={this.filterByMostLiked}>Most Liked</div>\r\n                        <div className=\"filter\">|</div>\r\n                        <div className=\"filter\" onClick={this.filterByMostCommented}>Most Commented</div>\r\n                        <input style={{ marginLeft: \"15%\" }} type=\"search\" onChange={this.onSearchTermEntered} placeholder=\"Search Images\"></input>\r\n                    </div>\r\n                    <div className=\"Cards\">\r\n                        {this.props.picsData.map(item => <Card onDeleteClick={this.onDeleteClick} onImageClick={this.onImageClick} onPostClicked={this.onPostClicked} onCommentChange={this.onCommentChange} onLikeClicked={this.onLikeClicked} {...item} />)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    picsData: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        searchedPosts: (data) => dispatch(searchedPosts(data))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsPage);","import React from 'react'\nimport './App.css';\nimport PostsPage from '../src/Containers/PostsPage/PostsPage'\n\nfunction App() {\n  return (\n    <div>\n      <div data-test = \"component-app\" className = \"App\">\n        <div className = \"Heading\">Imaginary</div>\n        <PostsPage/>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const posts = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS_SUCCESS':\r\n            return action.payload.posts\r\n        case 'SEARCHED_POST':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default posts","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport posts from './reducers'\r\n\r\n//code to setup redux dev tools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(posts, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { fetchPosts } from './Redux/actions'\n\nstore.dispatch(fetchPosts())\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}