{"ast":null,"code":"var _jsxFileName = \"C:\\\\Yash\\\\social-media-photo-app\\\\src\\\\Containers\\\\AllCardsPage\\\\AllCardsPage.js\";\nimport React, { Component } from 'react';\nimport Card from '../../Components/Card/Card';\nimport './AllCardsPage.css';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AllCardsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.any = id => {\n      let newData = this.state.picsData.map(item => {\n        if (id === item.id && item.liked !== true) {\n          let currentItem = item;\n          currentItem.likes = item.likes + 1;\n          currentItem.liked = true;\n          return currentItem;\n        }\n\n        if (id === item.id && item.liked === true) {\n          let currentItem = item;\n          currentItem.likes = item.likes - 1;\n          currentItem.liked = false;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n      this.setState(prevState => {\n        return { ...prevState,\n          picsData: newData\n        };\n      });\n    };\n\n    this.onCommentChange = (event, id) => {\n      this.setState({\n        newComment: event.target.value\n      });\n    };\n\n    this.onPostClicked = (id, comment) => {\n      let newData = this.state.picsData.map(item => {\n        if (id === item.id) {\n          let currentItem = item;\n          item.comments.push(comment);\n          currentItem = item;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n\n      if (this.state.picsData !== newData) {\n        this.setState({\n          picsData: newData\n        });\n      }\n\n      console.log(this.props.picsData);\n    };\n\n    this.filterByMostLiked = () => {\n      let sortedByLikes = this.state.picsData.sort(function (a, b) {\n        return a.likes - b.likes;\n      }).reverse();\n      this.setState({\n        picsData: sortedByLikes\n      }, () => {\n        console.log(\"sortedByLikes\");\n      });\n    };\n\n    this.filterByMostCommented = () => {\n      let sortedByLikes = this.state.picsData.sort(function (a, b) {\n        return a.comments.length - b.comments.length;\n      }).reverse();\n      this.setState({\n        picsData: sortedByLikes\n      }, () => {\n        console.log(\"sortedByLikes\");\n      });\n    };\n\n    this.onSearchTermEntered = event => {\n      const results = this.state.picsData.filter(item => item.category.toLowerCase().includes(event.target.value));\n      this.setState({\n        picsData: results\n      });\n    };\n\n    this.onImageClick = url => {\n      this.setState({\n        imageClickedUrl: url\n      });\n    };\n\n    this.onDeleteClick = (CardId, CommentKey) => {\n      console.log(CardId, CommentKey);\n      let newData = this.state.picsData.map(item => {\n        if (CardId === item.id) {\n          let currentItem = item;\n          item.comments.splice(CommentKey, 1);\n          currentItem = item;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n\n      if (this.state.picsData !== newData) {\n        this.setState({\n          picsData: newData\n        });\n      }\n    };\n\n    this.state = {\n      picsData: [],\n      imageClickedUrl: null,\n      outsideImageClicked: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json\").then(response => response.json()).then(data => this.setState({\n      picsData: data.pics\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.imageClickedUrl ? \"block\" : \"none\"\n        },\n        id: \"overlay\",\n        onClick: () => {\n          this.setState({\n            imageClickedUrl: null\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"overlayImageStyle\",\n            src: this.state.imageClickedUrl,\n            onClick: \"disabled click\",\n            alt: \"Avatar\",\n            style: {\n              width: \"500px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            onClick: this.filterByMostLiked,\n            children: \"Most Liked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            onClick: this.filterByMostCommented,\n            children: \"Most Commented\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            onChange: this.onSearchTermEntered,\n            placeholder: \"Search Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Cards\",\n          children: this.state.picsData.map(item => /*#__PURE__*/_jsxDEV(Card, {\n            onDeleteClick: this.onDeleteClick,\n            onImageClick: this.onImageClick,\n            onPostClicked: this.onPostClicked,\n            onCommentChange: this.onCommentChange,\n            any: this.any,\n            ...item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 58\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  picsData: state\n});\n\nexport default connect(mapStateToProps)(AllCardsPage);","map":{"version":3,"sources":["C:/Yash/social-media-photo-app/src/Containers/AllCardsPage/AllCardsPage.js"],"names":["React","Component","Card","connect","AllCardsPage","constructor","props","any","id","newData","state","picsData","map","item","liked","currentItem","likes","setState","prevState","onCommentChange","event","newComment","target","value","onPostClicked","comment","comments","push","console","log","filterByMostLiked","sortedByLikes","sort","a","b","reverse","filterByMostCommented","length","onSearchTermEntered","results","filter","category","toLowerCase","includes","onImageClick","url","imageClickedUrl","onDeleteClick","CardId","CommentKey","splice","outsideImageClicked","componentDidMount","fetch","then","response","json","data","pics","render","display","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '../../Components/Card/Card'\r\nimport './AllCardsPage.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass AllCardsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            picsData: [],\r\n            imageClickedUrl: null,\r\n            outsideImageClicked: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ picsData: data.pics }));\r\n    }\r\n\r\n    any = (id) => {\r\n        let newData = this.state.picsData.map(item => {\r\n            if (id === item.id && item.liked !== true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes + 1\r\n                currentItem.liked = true\r\n                return currentItem\r\n            }\r\n            if (id === item.id && item.liked === true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes - 1\r\n                currentItem.liked = false\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                picsData: newData\r\n            }\r\n        })\r\n    }\r\n\r\n    onCommentChange = (event, id) => {\r\n        this.setState({ newComment: event.target.value })\r\n    }\r\n\r\n    onPostClicked = (id, comment) => {\r\n        let newData = this.state.picsData.map(item => {\r\n            if (id === item.id) {\r\n                let currentItem = item\r\n                item.comments.push(comment)\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n        if (this.state.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n\r\n        console.log(this.props.picsData)\r\n    }\r\n\r\n    filterByMostLiked = () => {\r\n        let sortedByLikes = this.state.picsData.sort(function (a, b) {\r\n            return a.likes - b.likes;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    filterByMostCommented = () => {\r\n        let sortedByLikes = this.state.picsData.sort(function (a, b) {\r\n            return a.comments.length - b.comments.length;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    onSearchTermEntered = (event) => {\r\n        const results = this.state.picsData.filter(item =>\r\n            item.category.toLowerCase().includes(event.target.value)\r\n        );\r\n        this.setState({ picsData: results })\r\n    }\r\n\r\n    onImageClick = (url) => {\r\n        this.setState({ imageClickedUrl: url })\r\n    }\r\n\r\n    onDeleteClick = (CardId, CommentKey) => {\r\n        console.log(CardId, CommentKey)\r\n\r\n        let newData = this.state.picsData.map(item => {\r\n            if (CardId === item.id) {\r\n                let currentItem = item\r\n                item.comments.splice(CommentKey, 1);\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        if (this.state.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <div style={{ display: this.state.imageClickedUrl ? \"block\" : \"none\"}} id=\"overlay\" onclick=\"off()\">\r\n                <img  className = \"overlayImageStyle\" src={this.state.imageClickedUrl} alt=\"Avatar\" style={{ width: \"500px\" }}></img>\r\n            </div> */}\r\n                <div style={{ display: this.state.imageClickedUrl ? \"block\" : \"none\" }} id=\"overlay\" onClick={() => {this.setState({imageClickedUrl: null})}}>\r\n                    <div>\r\n                        <img className=\"overlayImageStyle\" src={this.state.imageClickedUrl} onClick='disabled click' alt=\"Avatar\" style={{ width: \"500px\"}}></img>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Header\">\r\n                        <div className=\"filter\" onClick={this.filterByMostLiked}>Most Liked</div>\r\n                        <div className=\"filter\">|</div>\r\n                        <div className=\"filter\" onClick={this.filterByMostCommented}>Most Commented</div>\r\n                        <input type=\"search\" onChange={this.onSearchTermEntered} placeholder=\"Search Images\"></input>\r\n                    </div>\r\n                    <div className=\"Cards\">\r\n                        {this.state.picsData.map(item => <Card onDeleteClick={this.onDeleteClick} onImageClick={this.onImageClick} onPostClicked={this.onPostClicked} onCommentChange={this.onCommentChange} any={this.any} {...item} />)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    picsData: state,\r\n  });\r\n\r\nexport default connect(mapStateToProps)(AllCardsPage);"]},"metadata":{},"sourceType":"module"}