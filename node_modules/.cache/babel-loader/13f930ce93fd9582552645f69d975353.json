{"ast":null,"code":"import _regeneratorRuntime from\"C:/Yash/social-media-photo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Yash/social-media-photo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';//synchronous action creator\nvar fetchPostsSuccess=function fetchPostsSuccess(posts){return{type:'FETCH_POSTS_SUCCESS',payload:{posts:posts}};};/*asynchronous thunk action creator\r\n  calls the api, then dispatches the synchronous action creator\r\n*/export var fetchPosts=function fetchPosts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var posts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json');case 3:posts=_context.sent;dispatch(fetchPostsSuccess(posts.data.pics));//store first five posts\n_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var searchedPosts=function searchedPosts(data){return function(dispatch,getState){dispatch({type:'SEARCHED_POST',data:data});};};","map":{"version":3,"sources":["C:/Yash/social-media-photo-app/src/Redux/actions.js"],"names":["axios","fetchPostsSuccess","posts","type","payload","fetchPosts","dispatch","get","data","pics","console","log","searchedPosts","getState"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,KAAK,QAAK,CAChCC,IAAI,CAAE,qBAD0B,CAEhCC,OAAO,CAAE,CAAEF,KAAK,CAALA,KAAF,CAFuB,CAAL,EAA/B,CAKA;AACA;AACA,EACA,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,+FAAO,iBAAMC,QAAN,kKAEmBN,CAAAA,KAAK,CAACO,GAAN,CAAU,4EAAV,CAFnB,QAEKL,KAFL,eAGCI,QAAQ,CAACL,iBAAiB,CAACC,KAAK,CAACM,IAAN,CAAWC,IAAZ,CAAlB,CAAR,CAA6C;AAH9C,+EAMCC,OAAO,CAACC,GAAR,cAND,oEAAP,+DASH,CAVM,CAYP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,IAAD,CAAU,CACnC,MAAO,UAACF,QAAD,CAAWO,QAAX,CAAwB,CAC3BP,QAAQ,CAAC,CAAEH,IAAI,CAAE,eAAR,CAAyBK,IAAI,CAAJA,IAAzB,CAAD,CAAR,CACH,CAFD,CAGH,CAJM","sourcesContent":["import axios from 'axios'\r\n\r\n//synchronous action creator\r\nconst fetchPostsSuccess = posts => ({\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    payload: { posts }\r\n})\r\n\r\n/*asynchronous thunk action creator\r\n  calls the api, then dispatches the synchronous action creator\r\n*/\r\nexport const fetchPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            let posts = await axios.get('https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json')\r\n            dispatch(fetchPostsSuccess(posts.data.pics)) //store first five posts\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const searchedPosts = (data) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'SEARCHED_POST', data })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}