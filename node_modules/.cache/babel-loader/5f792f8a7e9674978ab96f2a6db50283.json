{"ast":null,"code":"var _jsxFileName = \"C:\\\\Yash\\\\social-media-photo-app\\\\src\\\\Containers\\\\PostsPage\\\\PostsPage.js\";\nimport React, { Component } from 'react';\nimport Card from '../../Components/Card/Card';\nimport { connect } from 'react-redux';\nimport './PostsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PostsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLikeClicked = id => {\n      let newData = this.props.picsData.map(item => {\n        if (id === item.id && item.liked !== true) {\n          let currentItem = item;\n          currentItem.likes = item.likes + 1;\n          currentItem.liked = true;\n          return currentItem;\n        }\n\n        if (id === item.id && item.liked === true) {\n          let currentItem = item;\n          currentItem.likes = item.likes - 1;\n          currentItem.liked = false;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n      this.setState(prevState => {\n        return { ...prevState,\n          picsData: newData\n        };\n      });\n    };\n\n    this.onCommentChange = (event, id) => {\n      this.setState({\n        newComment: event.target.value\n      });\n    };\n\n    this.onPostClicked = (id, comment) => {\n      let newData = this.props.picsData.map(item => {\n        if (id === item.id) {\n          let currentItem = item;\n          item.comments.push(comment);\n          currentItem = item;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n\n      if (this.props.picsData !== newData) {\n        this.setState({\n          picsData: newData\n        });\n      }\n    };\n\n    this.filterByMostLiked = () => {\n      let sortedByLikes = this.props.picsData.sort(function (a, b) {\n        return a.likes - b.likes;\n      }).reverse();\n      this.setState({\n        picsData: sortedByLikes\n      }, () => {\n        console.log(\"sortedByLikes\");\n      });\n    };\n\n    this.filterByMostCommented = () => {\n      let sortedByLikes = this.props.picsData.sort(function (a, b) {\n        return a.comments.length - b.comments.length;\n      }).reverse();\n      this.setState({\n        picsData: sortedByLikes\n      }, () => {\n        console.log(\"sortedByLikes\");\n      });\n    };\n\n    this.onSearchTermEntered = event => {\n      console.log(event);\n      const results = this.props.picsData.filter(item => item.category.toLowerCase().includes(event.target.value));\n      this.setState({\n        picsData: results\n      });\n    };\n\n    this.onImageClick = url => {\n      this.setState({\n        imageClickedUrl: url\n      });\n    };\n\n    this.onDeleteClick = (CardId, CommentKey) => {\n      console.log(CardId, CommentKey);\n      let newData = this.props.picsData.map(item => {\n        if (CardId === item.id) {\n          let currentItem = item;\n          item.comments.splice(CommentKey, 1);\n          currentItem = item;\n          return currentItem;\n        } else {\n          return item;\n        }\n      });\n\n      if (this.props.picsData !== newData) {\n        this.setState({\n          picsData: newData\n        });\n      }\n    };\n\n    this.state = {\n      picsData: props.picsData,\n      imageClickedUrl: null,\n      outsideImageClicked: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.imageClickedUrl ? \"block\" : \"none\"\n        },\n        id: \"overlay\",\n        onClick: () => {\n          this.setState({\n            imageClickedUrl: null\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"overlayImageStyle\",\n            src: this.state.imageClickedUrl,\n            onClick: \"disabled click\",\n            alt: \"Avatar\",\n            style: {\n              width: \"500px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            onClick: this.filterByMostLiked,\n            children: \"Most Liked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            onClick: this.filterByMostCommented,\n            children: \"Most Commented\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              marginLeft: \"15%\"\n            },\n            type: \"search\",\n            onChange: this.onSearchTermEntered,\n            placeholder: \"Search Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Cards\",\n          children: this.state.picsData.map(item => /*#__PURE__*/_jsxDEV(Card, {\n            onDeleteClick: this.onDeleteClick,\n            onImageClick: this.onImageClick,\n            onPostClicked: this.onPostClicked,\n            onCommentChange: this.onCommentChange,\n            onLikeClicked: this.onLikeClicked,\n            ...item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 58\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  picsData: state\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsPage);","map":{"version":3,"sources":["C:/Yash/social-media-photo-app/src/Containers/PostsPage/PostsPage.js"],"names":["React","Component","Card","connect","PostsPage","constructor","props","onLikeClicked","id","newData","picsData","map","item","liked","currentItem","likes","setState","prevState","onCommentChange","event","newComment","target","value","onPostClicked","comment","comments","push","filterByMostLiked","sortedByLikes","sort","a","b","reverse","console","log","filterByMostCommented","length","onSearchTermEntered","results","filter","category","toLowerCase","includes","onImageClick","url","imageClickedUrl","onDeleteClick","CardId","CommentKey","splice","state","outsideImageClicked","render","display","width","marginLeft","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '../../Components/Card/Card'\r\nimport { connect } from 'react-redux'\r\nimport './PostsPage.css'\r\n\r\nclass PostsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            picsData: props.picsData,\r\n            imageClickedUrl: null,\r\n            outsideImageClicked: false\r\n        }\r\n    }\r\n\r\n    onLikeClicked = (id) => {\r\n        let newData = this.props.picsData.map(item => {\r\n            if (id === item.id && item.liked !== true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes + 1\r\n                currentItem.liked = true\r\n                return currentItem\r\n            }\r\n            if (id === item.id && item.liked === true) {\r\n                let currentItem = item\r\n                currentItem.likes = item.likes - 1\r\n                currentItem.liked = false\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                picsData: newData\r\n            }\r\n        })\r\n    }\r\n\r\n    onCommentChange = (event, id) => {\r\n        this.setState({ newComment: event.target.value })\r\n    }\r\n\r\n    onPostClicked = (id, comment) => {\r\n        let newData = this.props.picsData.map(item => {\r\n            if (id === item.id) {\r\n                let currentItem = item\r\n                item.comments.push(comment)\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n        if (this.props.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n    }\r\n\r\n    filterByMostLiked = () => {\r\n        let sortedByLikes = this.props.picsData.sort(function (a, b) {\r\n            return a.likes - b.likes;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    filterByMostCommented = () => {\r\n        let sortedByLikes = this.props.picsData.sort(function (a, b) {\r\n            return a.comments.length - b.comments.length;\r\n        }).reverse();\r\n\r\n        this.setState({ picsData: sortedByLikes }, () => { console.log(\"sortedByLikes\") })\r\n    }\r\n\r\n    onSearchTermEntered = (event) => {\r\n        console.log(event)\r\n        const results = this.props.picsData.filter(item =>\r\n            item.category.toLowerCase().includes(event.target.value)\r\n        );\r\n\r\n        this.setState({ picsData: results })\r\n\r\n    }\r\n\r\n    onImageClick = (url) => {\r\n        this.setState({ imageClickedUrl: url })\r\n    }\r\n\r\n    onDeleteClick = (CardId, CommentKey) => {\r\n        console.log(CardId, CommentKey)\r\n\r\n        let newData = this.props.picsData.map(item => {\r\n            if (CardId === item.id) {\r\n                let currentItem = item\r\n                item.comments.splice(CommentKey, 1);\r\n                currentItem = item\r\n                return currentItem\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        if (this.props.picsData !== newData) {\r\n            this.setState({ picsData: newData })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{ display: this.state.imageClickedUrl ? \"block\" : \"none\" }} id=\"overlay\" onClick={() => { this.setState({ imageClickedUrl: null }) }}>\r\n                    <div>\r\n                        <img className=\"overlayImageStyle\" src={this.state.imageClickedUrl} onClick='disabled click' alt=\"Avatar\" style={{ width: \"500px\" }}></img>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Header\">\r\n                        <div className=\"filter\" onClick={this.filterByMostLiked}>Most Liked</div>\r\n                        <div className=\"filter\">|</div>\r\n                        <div className=\"filter\" onClick={this.filterByMostCommented}>Most Commented</div>\r\n                            <input style={{ marginLeft: \"15%\" }} type=\"search\" onChange={this.onSearchTermEntered} placeholder=\"Search Images\"></input>\r\n                    </div>\r\n                    <div className=\"Cards\">\r\n                        {this.state.picsData.map(item => <Card onDeleteClick={this.onDeleteClick} onImageClick={this.onImageClick} onPostClicked={this.onPostClicked} onCommentChange={this.onCommentChange} onLikeClicked={this.onLikeClicked} {...item} />)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    picsData: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsPage);"]},"metadata":{},"sourceType":"module"}